# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os
from PyQt5 import QtCore, QtGui, QtWidgets
import PyQt5
import cv2
import qimage2ndarray
import numpy as np
from server import connect_with_server
class MainDialog(QtWidgets.QDialog):
    dropped = QtCore.pyqtSignal(str)
    def __init__(self):
        super().__init__()
        self.setObjectName("Dialog")
        self.resize(512, 768)
        self.setAcceptDrops(True)
    def dragEnterEvent(self,event):
        if event.mimeData().hasUrls():
            event.accept()
        else:
            event.ignore()
    def dropEvent(self,event):
        print('drop')
        img_url = event.mimeData().urls()[0].toLocalFile()
        self.dropped.emit(img_url)
class ImagePixMap(QtWidgets.QLabel):
    def __init__(self,parent):
        super().__init__(parent)
        self.setAlignment(QtCore.Qt.AlignHCenter | QtCore.Qt.AlignVCenter)
        self.resize(512,512)
        pixmap = QtGui.QPixmap("sample_img.png")
        self.setPixmap(QtGui.QPixmap(pixmap))


    def setImage(self,np_img):

        np_img = np_img[:,:,::-1]
        qimage = qimage2ndarray.array2qimage(np_img)
        pixmap = QtGui.QPixmap(qimage)
        pixmap = self.adjustImage(pixmap)
        self.setPixmap(QtGui.QPixmap(pixmap))
    
    def adjustImage(self,pixmap):
        h,w = pixmap.height(),pixmap.width()
        max_len = max(h,w)
        if max_len > 512:
            if h > w :
                pixmap = pixmap.scaledToHeight(512)
            else:
                pixmap = pixmap.scaledToWidth(512)
        return pixmap
class Ui_Dialog(object):
    def dropImg(self,img_url):
        raw_img = np.fromfile(img_url,np.uint8)
        np_img = cv2.imdecode(raw_img,cv2.IMREAD_COLOR)
        self.image_map.setImage(np_img)
        self.drag_navigator.setParent(None)
        self.raw_img = raw_img
        self.ready_to_send = True
    def sendImg(self):
        print('send')
        if self.ready_to_send:
            recv = connect_with_server(self.raw_img)
            self.ready_to_send=False
        print(recv)
    def qt_connect(self):
        self.dialog.dropped.connect(self.dropImg)
        self.send_button.released.connect(self.sendImg)
    def setupUi(self, Dialog):
        self.ready_to_send = False
        self.dialog = Dialog
        self.groupBox = QtWidgets.QGroupBox(Dialog)
        self.groupBox.setGeometry(QtCore.QRect(220, 520, 281, 241))
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.class_name = QtWidgets.QListWidget(self.groupBox)
        self.class_name.setGeometry(QtCore.QRect(10, 20, 256, 21))
        self.class_name.setObjectName("class_name")
        self.recipes = QtWidgets.QListWidget(self.groupBox)
        self.recipes.setGeometry(QtCore.QRect(10, 50, 256, 171))
        self.recipes.setDragEnabled(True)
        self.recipes.setObjectName("recipes")
        item = QtWidgets.QListWidgetItem()
        self.recipes.addItem(item)
        self.image_frame = QtWidgets.QFrame(Dialog)
        self.image_frame.setGeometry(QtCore.QRect(0, 0, 512, 512))
        self.image_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.image_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.image_frame.setObjectName("image_frame")
        self.image_map = ImagePixMap(self.image_frame)
        
        self.send_button = QtWidgets.QPushButton('Send',Dialog)
        self.send_button.setCheckable(False)
        self.send_button.setGeometry(QtCore.QRect(72,524,84,28))

        self.drag_navigator = QtWidgets.QListWidget(self.image_frame)
        self.drag_navigator.setGeometry(QtCore.QRect(190, 220, 141, 21))
        self.drag_navigator.setObjectName("drag_navigator")
        item = QtWidgets.QListWidgetItem()
        self.drag_navigator.addItem(item)
        self.drag_navigator.raise_()

        self.qt_connect()
        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        __sortingEnabled = self.recipes.isSortingEnabled()
        self.recipes.setSortingEnabled(False)
        item = self.recipes.item(0)
        item.setText(_translate("Dialog", "sample"))
        self.recipes.setSortingEnabled(__sortingEnabled)
        self.drag_navigator.setWhatsThis(_translate("Dialog", "<html><head/><body><p><br/></p></body></html>"))
        __sortingEnabled = self.drag_navigator.isSortingEnabled()
        self.drag_navigator.setSortingEnabled(False)
        item = self.drag_navigator.item(0)
        item.setText(_translate("Dialog", "이미지를 드래그 하세요"))
        self.drag_navigator.setSortingEnabled(__sortingEnabled)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = MainDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
